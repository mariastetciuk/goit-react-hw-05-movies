{"version":3,"file":"static/js/888.347558bd.chunk.js","mappings":"8MAEO,SAAeA,EAAtB,oC,aAAO,O,oBAAA,WAA2BC,EAAQC,GAAnC,uEACY,gCACD,mCAFX,SAIQC,EAAAA,EAAAA,IAAA,UAHI,iCAGJ,OACGF,EADH,oBAFG,mCAEH,YACgCC,EADhC,oBAJR,0G,8ICDP,GAAgB,MAAQ,4BAA4B,QAAU,8BAA8B,KAAO,2BAA2B,KAAO,4B,SC4ErI,EAxEqB,WAAO,IAAD,IACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG3D,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMd,EAAM,gBAAYG,GADV,wCAEd,gHAE2BJ,EAAAA,EAAAA,GAAYC,GAFvC,gBAEYe,EAFZ,EAEYA,KACRF,EAASE,GAHb,gDAKIC,QAAQC,IAAR,MALJ,0DAFc,0DAUdC,EACD,GAAE,CAACf,IAEJ,IAAqBgB,EAMrB,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIb,EAAoBc,QAA9B,SAAuC,aACvC,qBAASC,UAAWC,EAAAA,QAApB,WACE,gBACEC,IAAKZ,EAAMa,YA3BP,kCA2B2Bb,EAAMa,YAAc,GACnDC,IAAKd,EAAMe,MACXC,MAAM,MACNC,OAAO,SAET,iBAAKP,UAAWC,EAAAA,OAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGX,EAAMe,MAAM,KAlBFR,EAkBiBP,EAAMkB,aAjBxB,IAAIC,KAAKZ,GACJa,eAgBiC,QAElD,eAAGV,UAAWC,EAAAA,KAAd,UAAwB,gBACa,GAArBX,EAAMqB,cAAmBC,UAAU,QAEnD,eAAIZ,UAAWC,EAAAA,MAAf,SAA0B,cAC1B,cAAGD,UAAWC,EAAAA,KAAd,SAAyBX,EAAMuB,YAC/B,eAAIb,UAAWC,EAAAA,MAAf,SAA0B,YAC1B,cAAGD,UAAWC,EAAAA,KAAd,SACGX,EAAMwB,OACHxB,EAAMwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC3C,YAIV,gCACE,wBAAI,4BACJ,2BACE,eAAIlB,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAMH,GAAG,OAAT,SAAgB,YAElB,eAAIE,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAMH,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAqB,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,WAKT,C","sources":["API/themoviedbApi.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovies(params, query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '3ecc7363f263881322228195a13f9a25';\n\n  return await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&${query}&language=en-US`\n  );\n}\n// ?language=en-US`, {\n//         headers: {\n//             Accept: \"application/json\",\n//             Authorization: API_KEY\n//         },\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieDetails_title__RBndM\",\"article\":\"MovieDetails_article__-aoPZ\",\"text\":\"MovieDetails_text__uG5Tv\",\"item\":\"MovieDetails_item__9ATw3\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovies } from 'API/themoviedbApi';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const url = 'https://image.tmdb.org/t/p/w500';\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    const params = `movie/${movieId}`;\n    async function featch() {\n      try {\n        const { data } = await fetchMovies(params);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    featch();\n  }, [movieId]);\n\n  const getYearMovie = date => {\n    const dateMovie = new Date(date);\n    const year = dateMovie.getFullYear();\n    return year;\n  };\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>go back</Link>\n      <article className={css.article}>\n        <img\n          src={movie.poster_path ? url + movie.poster_path : ''}\n          alt={movie.title}\n          width=\"350\"\n          height=\"450\"\n        />\n        <div className={css.wraper}>\n          <h2 className={css.title}>\n            {movie.title}({getYearMovie(movie.release_date)})\n          </h2>\n          <p className={css.text}>\n            User Score: {(movie.vote_average * 10).toFixed()}%\n          </p>\n          <h3 className={css.title}>Overview</h3>\n          <p className={css.text}>{movie.overview}</p>\n          <h3 className={css.title}>Genres</h3>\n          <p className={css.text}>\n            {movie.genres\n              ? movie.genres.map(genre => genre.name).join(' ')\n              : ''}\n          </p>\n        </div>\n      </article>\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <li className={css.item}>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li className={css.item}>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovies","params","query","axios","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movie","setMovie","useEffect","data","console","log","featch","date","to","current","className","css","src","poster_path","alt","title","width","height","release_date","Date","getFullYear","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}