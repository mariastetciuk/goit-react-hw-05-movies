{"version":3,"file":"static/js/134.acab7b9b.chunk.js","mappings":"8MAEO,SAAeA,EAAtB,oC,aAAO,O,oBAAA,WAA2BC,EAAQC,GAAnC,uEACY,gCACD,mCAFX,SAIQC,EAAAA,EAAAA,IAAA,UAHI,iCAGJ,OACGF,EADH,oBAFG,mCAEH,YACgCC,EADhC,oBAJR,0G,iHCqDP,UAnDe,WAAO,IAAD,EACnB,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXT,EAAK,UAAGG,EAAaO,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVX,EAAJ,CACA,IAAMD,EAAS,eACTa,EAAW,gBAAYZ,IAHf,mCAYda,EAXwB,CADV,wCAId,gHAE2Bf,EAAAA,EAAAA,GAAYC,EAAQa,GAF/C,gBAEYE,EAFZ,EAEYA,KACRP,EAAUO,EAAKC,SAHnB,gDAKIC,QAAQC,IAAR,MALJ,0DAJc,sBAaf,GAAE,CAACjB,IAUJ,OACE,gCACE,kBAAMkB,SAVW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,MAAMC,MAEhDrB,EAAgB,CAAEJ,MAAOqB,IACzBF,EAAMG,OAAOI,OACd,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBAC5C,mBAAQF,KAAK,SAAb,wBAEF,wBACGrB,EAAOwB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM3B,GAAhD,SACGuB,EAAMK,SAFFL,EAAME,GAMlB,QAIR,C","sources":["API/themoviedbApi.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovies(params, query) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '3ecc7363f263881322228195a13f9a25';\n\n  return await axios.get(\n    `${BASE_URL}${params}?api_key=${API_KEY}&${query}&language=en-US`\n  );\n}\n// ?language=en-US`, {\n//         headers: {\n//             Accept: \"application/json\",\n//             Authorization: API_KEY\n//         },\n","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'API/themoviedbApi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    const params = 'search/movie';\n    const queryParams = `query=${query}`;\n    async function featch() {\n      try {\n        const { data } = await fetchMovies(params, queryParams);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    featch();\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchQuery = event.target.elements.input.value;\n\n    setSearchParams({ query: searchQuery });\n    event.target.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"input\" placeholder=\"Search movies\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovies","params","query","axios","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","get","useEffect","queryParams","featch","data","results","console","log","onSubmit","event","preventDefault","searchQuery","target","elements","input","value","reset","type","name","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}